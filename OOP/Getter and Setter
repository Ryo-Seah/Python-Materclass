class Player:

    def __init__(self, name):
        self.name = name
        self._lives = 3
        self._score = 0
        self._level = 1

    def _get_lives(self):
        return self._lives

    def _set_lives(self, lives):
        if lives >= 0:
            self._lives = lives
        else:
            print("Lives cannot be negative")
            self._lives = 0

    def __str__(self):
        print('Name : {0.name}, Lives : {0.lives}, Score : {0.score}, level : {0.level}'.format(self))

    def _set_level(self, level):
        if level >= 1:
            delta = level - self._level
            self._level = level
            self._score += delta * 1000
        else:
            print("Level cant be negative")


    def _get_level(self):
        return self._level

    @property  # syntax 2 , use of decorators, dont need property assignment
    def score(self):
        return self._score

    @score.setter
    def score(self, score):
        self._score = score




    level = property(_get_level, _set_level)

    lives = property(_get_lives, _set_lives)
    # def _set_level(self):
    #     if self.level < 1:
    #         print("Can't have a negative level")
    #         self.level = 1
    #     else :
    #         self.level = level
