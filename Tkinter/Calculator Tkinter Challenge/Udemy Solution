import tkinter as tk

mainwindow = tk.Tk()
mainwindow.title('Calculator App')
mainwindow.geometry('480x360-8-200')
mainwindowpadding=8
mainwindow.config(padx=mainwindowpadding)

Outputbar = tk.Entry(mainwindow, text='HELLO')
Outputbar.grid(row=0, column=0, columnspan=4, sticky='nsew')
keypad = tk.Frame(mainwindow)
keypad.grid(row=1, column = 0, sticky= 'nsew')


keys = [[('C', 1), ('CE', 1)],
        [('7', 1), ('8', 1), ('9', 1), ('+', 1)],
        [('4', 1), ('5', 1), ('6', 1), ('-', 1)],
        [('1', 1), ('2', 1), ('3', 1), ('-', 1)],
        [('0', 1), ('=', 1), ('/', 1)]]
row_no = 0
for row in keys:
        column=0
        for item in row:
                tk.Button(keypad, text=item[0], width=3).grid(row=row_no, column = column, sticky='ew')
                column += 1
        row_no+=1
        
mainwindow.update()
mainwindow.minsize(keypad.winfo_width() +mainwindowpadding, Outputbar.winfo_height()+keypad.winfo_height())
mainwindow.maxsize(keypad.winfo_width() + 70 + mainwindowpadding, Outputbar.winfo_height()+70 + keypad.winfo_height())
mainwindow.mainloop()
# minsize restricts the minimum minimization of window. # Here, .winfo_width and .winfo_height gives us length and breadth of wdigets with addition of other factors like padx
# .update forces window the draw the widgets first so the line of code after will run.
#rmb that only after passing .mainloop at lastline is everything generated. Before that, by chronology, none of widgets exist.
# Maxsize similar to min but used less often. gave a leeway of 70 pix
